###########################################
# Home Sensors
###########################################
- platform: nest
  monitored_conditions:
  - 'temperature'
  - 'humidity'
  - 'operation_mode'
- platform: nzbget
  host: !secret nas_address
  port: 6789
  username: !secret nzbget_username
  password: !secret nzbget_password
  monitored_variables:
  - download_rate
- platform: command_line
  unit_of_measurement: 'ppm'
  command: 'bash /home/pi/.homeassistant/withings/withings_co2.sh'
  name: 'CO2'
  scan_interval: 60
- platform: command_line
  unit_of_measurement: 'C'
  command: 'bash /home/pi/.homeassistant/withings/withings_temp.sh'
  name: 'Scale'
  scan_interval: 60
- platform: template
  sensors:
    climate_operation_mode:
      value_template: "{{ states.climate.home.attributes.operation_mode if states.climate.home is not none else 'unknown' }}"
      entity_id: climate.home
- platform: command_line
  command: "node /home/pi/.homeassistant/roomba/roomba_status.js | grep robot_status | cut -d : -f 5 | cut -f 1 -d \",\" | sed -e 's/^\"//' -e 's/\"$//'"
  name: 'Roomba Phase'
- platform: template
  sensors:
    roomba_status:
        value_template: >-
            {%- if is_state("sensor.roomba_phase", "charge") %}
                Charging
            {% elif is_state("sensor.roomba_phase", "run") %}
                Cleaning
            {% elif is_state("sensor.roomba_phase", "stuck") %}
                Stuck
            {%- endif %}
- platform: command_line
  command: "node /home/pi/.homeassistant/roomba/roomba_status.js | grep robot_status | cut -d : -f 11 | cut -f 1 -d \",\""
  name: 'Roomba Battery'
  unit_of_measurement: '%'
- platform: command_line
  command: "node /home/pi/.homeassistant/roomba/roomba_status.js | grep robot_status | cut -d : -f 17 | sed 's/[^0-9]*//g'"
  name: 'Roomba Coverage'
  unit_of_measurement: 'sqft'

###########################################
# Weather Sensors
###########################################
- platform: yr
  monitored_conditions:
  - 'temperature'
  - 'humidity'
  - 'symbol'
- platform: darksky
  api_key: !secret darksky_api
  monitored_conditions:
  - 'precip_probability'
  - 'temperature_min'
  - 'temperature_max'
- platform: wunderground
  api_key: !secret wunderground_api
  monitored_conditions:
  - 'feelslike_c'
  - 'wind_kph'
  - 'UV'
  - 'precip_today_metric'
- platform: template
  sensors:
    solar_angle:
      value_template: '{{ states.sun.sun.attributes.elevation }}'
      friendly_name: 'Solar Angle'
      unit_of_measurement: 'degrees'
    sunrise:
      value_template: '{{ ((as_timestamp(states.sun.sun.attributes.next_rising)) | timestamp_local) [11:16] }} am'
      friendly_name: 'Sunrise'
    sunset:
      value_template: '{{ ((as_timestamp(states.sun.sun.attributes.next_setting)-(43200)) | timestamp_local) [11:16] }} pm'
      friendly_name: 'Sunset'

###########################################
# Travel Sensors
###########################################
- platform: google_travel_time
  name: Home to Enmax
  api_key: !secret google_maps
  origin: zone.home
  destination: !secret work_address1
- platform: google_travel_time
  name: Home to Supported Lifestyles
  api_key: !secret google_maps
  origin: zone.home
  destination: !secret work_address2

###########################################
# Debug Sensors
###########################################
- platform: command_line
  command: "pip show homeassistant | grep -w \"^Version:\" | cut -d : -f2 | sed -e 's/^[ \t]*//'"
  name: 'HASS Installed'
  scan_interval: 60
- platform: rest
  resource: https://api.github.com/repos/home-assistant/home-assistant/releases/latest
  username: !secret email_account
  password: !secret github_token
  authentication: basic
  value_template: '{{ value_json.tag_name }}'
  name: 'HASS Release'
  headers:
    Accept: application/vnd.github.v3+json
    Content-Type: application/json
    User-Agent: Home Assistant REST sensor
- platform: api_streams